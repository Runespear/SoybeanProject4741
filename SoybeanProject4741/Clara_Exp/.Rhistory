demo()
lirary(quantmod)
library(quantmod)
install.packages("quantmod")
?quantmod
??quatmod
movie_metadata <- read.csv("C:/Users/User/Dropbox/1 MEng Sem 1/ORIE 4741 Learning with Big Messy Data/Homework/movie_metadata.csv")
View(movie_metadata)
data <- movie_metadata
data
str(data)
install.packages("ggplot")
a <- matrix(rnorm(6),2,3)
a
a <- matrix(rnorm(6),4,3)
a
a <- matrix(rnorm(6),23)
a <- matrix(rnorm(6),2,3)
a
a
a*t(a)
a <- matrix(rnorm(6),3,3)
a
a*t(a)
t(a)
a
install.packages("car")
attach(data)
View(movie_metadata)
plot(duration, movie_facebook_likes, main="Scatterplot Example",
plot(duration, movie_facebook_likes, main="Scatterplot Example")
plot(duration, movie_facebook_likes, main="Scatterplot Example")
library(ggplot2)
install("ggplot2")
install.packages("ggplot2")
binwidth
library(ggplot2)
library(lattice)
pairs(~imdb_score+movie_facebook_likes+director_facebook_likes,data=data)
pairs(~imdb_score+movie_facebook_likes+director_facebook_likes+gross,data=data)
hist(data$duration,     main="Histogram for Air Passengers",     xlab="Passengers",     border="blue",     col="green",     xlim=c(100,700),     las=1,     breaks=5)
hist(data$duration,     main="Histogram for Durations",     xlab="Passengers",     border="blue",     col="green",     xlim=c(100,700),     las=1,     breaks=5)
hist(data$duration,     main="Histogram for Durations",     xlab="Duration",     border="blue",     col="green",     xlim=c(100,700),     las=1,     breaks=5)
hist(data$duration, main="Histogram for Durations", xlab="Duration")
summary(data$duration)
library(rtf)
install.packages("rtf")
library(rtf)
boxplot(gross~director_name,data=data, main="Car Milage Data",
barplot(data$director_name, main="Car Distribution",
xlab="Number of Gears")
summary(director_name)
View(movie_metadata)
xlab="Number of Gears")
barplot(data$director_name, main="Car Distribution", xlab="Number of Gears")
barplot(data$director_name)
barplot(country)
boxplot(gross~country,data=data, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
str(content_rating)
plot(duration, movie_facebook_likes, main="Scatterplot Example")
plot(director_facebook_likes, movie_facebook_likes, main="Scatterplot Example")
hist(data$director_facebook_likes, main="Histogram for Durations", xlab="Duration")
hist(data$movie_facebook_likes, main="Histogram for Durations", xlab="Duration")
summary(data$duration)
boxplot(duration)
boxplot(gross~genre)
boxplot(gross~genres)
barplot(gross~genres)
barplot(gross, names.arg = genres)
barplot(gross, names.arg = content_rating)
data <- movie_metadata
data
str(data)
attach(data)
plot(director_facebook_likes, movie_facebook_likes, main="Scatterplot Example")
pairs(~imdb_score+movie_facebook_likes+director_facebook_likes+gross,data=data)
hist(data$movie_facebook_likes, main="Histogram for Durations", xlab="Duration")
summary(data$duration)
boxplot(duration)
summary(director_name)
barplot(gross, names.arg = content_rating)
str(content_rating)
movies <- read.csv("C:/Users/User/Dropbox/1 MEng Sem 1/ORIE 4741 Learning with Big Messy Data/Homework/movies.csv")
View(movies)
data <- movies
data
str(data)
attach(data)
plot(director_facebook_likes, movie_facebook_likes, main="Scatterplot Example")
pairs(~imdb_score+movie_facebook_likes+director_facebook_likes+gross,data=data)
hist(data$movie_facebook_likes, main="Histogram for Durations", xlab="Duration")
summary(data$duration)
boxplot(duration)
summary(director_name)
barplot(gross, names.arg = content_rating)
str(content_rating)
M = {1,2,3}
M = {1 2 3}
M = [1,2,3]
M <- [1,2,3]
M <- c(1,2,3)
M
M <- c(1,2,3),(4,5,6)
M <- c((1,2,3),(4,5,6))
M
M <- c((1,2,3) (4,5,6))
<
M
M <-matrix(c((1,2,3,4,5,6), nrow=2, ncol=3))
M <-matrix(c((1,2,3,4,5,6), nrow=2, ncol=3)
M <-matrix(c(1,2,3,4,5,6), nrow=2, ncol=3)
M
M'*M
transpose(M)*M
t(M)*M
t(M)
M <-matrix(c(1,2,3,4,5,6), nrow=2, ncol=3);
t(M)
t(M)*M
M*t(M)
M*t(M)
t(M)
M
t(M) %*% M
solve(t(M) %*% M)
d=(t(M) %*% M)
solve(d)
det(d)
M
d
det(d)
M*M
M\
M
t(M)
M%*%M
t(M)*M
M*(t(M))
t(M)*M
`EXPERIMENT.DATA.CSV.(Cleaned)` <- read.csv("C:/Users/User/Dropbox/1 MEng Sem 1/SoybeanProject4741/Student_Team_Competition_Syngenta_Data/EXPERIMENT DATA CSV (Cleaned).csv")
View(`EXPERIMENT.DATA.CSV.(Cleaned)`)
data <- EXPERIMENT.DATA.CSV.(Cleaned)
data <- EXPERIMENT.DATA.CSV.(Cleaned)
data <- EXPERIMENT.DATA.CSV(Cleaned)
data <- EXPERIMENT.DATA.CSV.(Cleaned)
.
data <- EXPERIMENT.DATA.CSV.(Cleaned)
data <- read.csv("C:/Users/User/Dropbox/1 MEng Sem 1/ORIE 4741 Learning with Big Messy Data/Project/EXPERIMENT DATA CSV (Cleaned).csv")
View(data)
library(ggplot2)
year_yield <- ggplot(data, aes(YEAR, YIELD))
year_yield + geom_point()
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library("ggplot2", lib.loc="~/R/win-library/3.3")
year_yield <- ggplot(data, aes(YEAR, YIELD))
year_yield <- qplot(data, aes(YEAR, YIELD))
library(lattice)
library(rtf)
year_yield <- qplot(data, aes(YEAR, YIELD))
library("ggplot2", lib.loc="~/R/win-library/3.3")
year_yield <- qplot(data, aes(YEAR, YIELD))
install.packages("ggplot2")
year_yield <- ggplot(data, aes(YEAR, YIELD))
library(ggplot2)
View(`EXPERIMENT.DATA.CSV.(Cleaned)`)
data
plot(YIELD~YEAR,data = data)
plot(YIELD~YEAR,data=subset(data,YEAR=="2009"))
plot(YIELD,data=subset(data,YEAR=="2009"))
plot(YIELD~YEAR,data = data)
plot(YIELD~YEAR,data = data)
plot(YIELD~YEAR,data = data)
xlab="Year", ylab="Yield")
boxplot(YIELD~YEAR,data=data, main="Yield vs Year", xlab="Year", ylab="Yield")
boxplot(FAMILY~YEAR,data=data, main="Yield vs Family", xlab="Family", ylab="Yield")
str(data)
plot(YIELD~RM,data=data, main="Yield vs RM", xlab="RM", ylab="Yield")
plot(YIELD)
plot(YIELD~BAGSOLD,data=data, main="Yield vs RM", xlab="RM", ylab="Yield")
plot(YIELD~BAGSOLD,data=data, main="Yield vs Bags Sold", xlab="Bags Sold", ylab="Yield")
plot(BAGSOLD~RM,data=data, main="Bags Sold vs RM", xlab=""Bags Sol"RM", ylab="Bags Sold")
plot(BAGSOLD~RM,data=data, main="Bags Sold vs RM", xlab="RM", ylab="Bags Sold")
plot(YIELD~BAGSOLD,data=data, main="Yield vs Bags Sold", xlab="Bags Sold", ylab="Yield")
year_yield <- ggplot(data, aes(YEAR, YIELD))
year_yield <-ggplot2:: ggplot(data, aes(YEAR, YIELD))
.Library
View(`EXPERIMENT.DATA.CSV.(Cleaned)`)
year_yield <-ggplot2:: ggplot(data, aes(YEAR, YIELD))
year_yield <- ggplot(data, aes(YEAR, YIELD))
library(ggplot2)
year_yield <- ggplot(data, aes(YEAR, YIELD))
year_yield + geom_point()
year_yield <- ggplot(data, aes(YEAR, YIELD)) + geom_point()
ggplot(data, aes(YEAR, YIELD)) + geom_boxplot()
ggplot(data, aes(group=YEAR, YIELD)) + geom_boxplot()
ggplot(data, aes(YEAR, YIELD)) + geom_boxplot()
plot(YIELD, labels = TRUE) # default main & xlab using wwt$xname
plot(RM, labels = TRUE) # default main & xlab using wwt$xname
hist(YIELD, breaks=12, col="red")
hist(RM, breaks=12, col="red")
hist(data$RM, breaks=12, col="red")
hist(data$RM, breaks=12)
hist(data$RM, breaks=12, col="blue")
hist(data$YIELD, breaks=12, col="blue")
hist(data$BAGSOLD, breaks=12, col="blue")
hist(data$YIELD, breaks=12, col="blue")
ggplot(data, aes(YEAR, YIELD)) + geom_boxplot(aes(group=YEAR))
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = CLASS_OF)
data$CLASS_FACTOR <- factor(data$CLASS_OF)
str(data)
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = CLASS_FACTOR)
data$CLASS_FACTOR
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = CLASS_FACTOR)
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = CLASS_FACTOR)
data$CLASS_FACTOR <- factor(data$CLASS_OF)
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = CLASS_FACTOR)
source('C:/Users/User/Dropbox/1 MEng Sem 1/ORIE 4741 Learning with Big Messy Data/Project/R script.R')
source('C:/Users/User/Dropbox/1 MEng Sem 1/ORIE 4741 Learning with Big Messy Data/Project/R script.R')
install.packages("ggplot2")
install.packages("ggplot2")
source('C:/Users/User/Dropbox/1 MEng Sem 1/ORIE 4741 Learning with Big Messy Data/Project/R script.R')
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = CLASS_FACTOR)
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = CLASS_FACTOR)
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = FAMILY)
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = data$CLASS_FACTOR)
ggplot(data, aes(YEAR, YIELD)) + geom_point(colour = data$FAMILY)
source('C:/Users/User/Dropbox/1 MEng Sem 1/ORIE 4741 Learning with Big Messy Data/Project/R script.R')
IntersectVarieties <- read.csv("C:/Users/User/Dropbox/1 MEng Sem 1/ORIE 4741 Learning with Big Messy Data/Project/IntersectVarieties.csv")
View(IntersectVarieties)
data<- IntersectVarieties
data
str(data)
intersect(NoClass)
intersect(NoClass, Class2011)
intersect(data[1,], data[2,])
intersect(data[1,], data[2,])
intersect(data[2,], data[3,])
intersect(data[1,], data[2,])
intersect(data[2,], data[2,])
data[2,]
intersect(data[,1], data[,2])
data[,1]
for i in 1:5 {
for j in 1:5 {
intersect(data[,i], data[,j])
}
}
for (i in 1:5) {
for (j in 1:5) {
intersect(data[,i], data[,j])
}
}
for (i in 1:5) {
for (j in 1:5) {
check[count] = intersect(data[,i], data[,j])
count = count + 1
}
}
for (i in 1:5) {
for (j in 1:5) {
check[,count] = intersect(data[,i], data[,j])
count = count + 1
}
}
for (i in 1:5) {
for (j in 1:5) {
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
check = data.frame(matrix(NA, nrow=15485, ncol=25))
for (i in 1:5) {
for (j in 1:5) {
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
count = 1
for (i in 1:5) {
for (j in 1:5) {
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
check
str(check)
test <- intersect(data[,i], data[,j])
test
test <- intersect(data[,1], data[,1])
test
check = data.frame(matrix(NA, nrow=15485, ncol=25))
for (i in 1:5) {
for (j in 1:5 and j!=i) {
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
check
str(check)
test <- intersect(data[,1], data[,2])
test
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
names(check[,count]) <- toString(count)
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
test <- intersect(data[,1], data[,3])
test
str(test)
check[,1]
check[1,1]
check[,1]
str(check[,1])
str(check)
k in 1:5
1:5
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
count
count = 1
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
count
str(check)
check = data.frame(matrix(NA, nrow=15485, ncol=25))
count = 1
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
count
check
str(check)
check = data.frame(matrix(NA, nrow=15485, ncol=20))
check
str(check)
count = 1
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
count
check
str(check)
sort(check[,1])
check[,1]
head.(check[,1])
check[1:10,1]
IntersectFamilies <- read.csv("C:/Users/User/Dropbox/1 MEng Sem 1/ORIE 4741 Learning with Big Messy Data/Project/IntersectFamilies.csv")
View(IntersectFamilies)
data2 <- IntersectFamilies
data2
str(data2)
count2 = 1
check2 = data.frame(matrix(NA, nrow=1953, ncol=20))
str(check2)
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
check2[,count] <- intersect(data2[,i], data2[,j])
count2 = count2 + 1
}
}
}
count2
count2 = 1
check2 = data.frame(matrix(NA, nrow=1953, ncol=20))
str(check2)
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
check2[,count] <- intersect(data2[,i], data2[,j])
count2 = count2 + 1
}
}
}
check2[,count] <- intersect(data2[,i], data2[,j])
check2
str(check2)
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
check2[,count2] <- intersect(data2[,i], data2[,j])
count2 = count2 + 1
}
}
}
count2
str(check2)
str(check)
check2[,count2] <- intersect(data2[,1], data2[,2])
check2[,1]
str(check2)
count = 1
check = data.frame(matrix(NA, nrow=15485, ncol=20))
str(check)
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
str(check)
count2 = 1
check2 = data.frame(matrix(NA, nrow=1953, ncol=20))
str(check2)
for (i in 1:5) {
for (j in 1:5) {
if (i!=j)
{
check2[,count2] <- intersect(data2[,i], data2[,j])
count2 = count2 + 1
}
}
}
check2[,count2] <- intersect(data2[,1], data2[,2])
train1 <- read.csv("C:/Users/User/Dropbox/SoybeanProject4741/Split_Data/training[1].csv")
View(train1)
myvars <- c("YEAR", "EXPERIMENT", "LOCATION", "VARIETY", "FAMILY", "CHECK", "RM", "REPNO", "YIELD", "CLASS_OF", "GRAD")
train1 <- train1[myvars]
train1$LOCATION <- as.factor(train1$LOCATION)
train1$GRAD <- as.factor(train1$GRAD)
train1$CLASS_OF <- as.factor(train1$CLASS_OF)
nb_model <- naiveBayes(train1$GRAD~., data = train1)
library(mlbench)
library(e1071)
library(rpart)
nb_model <- naiveBayes(train1$GRAD~., data = train1)
train1 <- read.csv("../Split_Data/training[1].csv")
getwd()
setwd(C:/Users/User/Dropbox/SoybeanProject4741)
> setwd(C:/Users/User/Dropbox/SoybeanProject4741)
setwd(C:/Users/User/Dropbox/SoybeanProject4741)
getwd()
setwd("C:/Users/User/Dropbox/SoybeanProject4741")
train1 <- read.csv("../Split_Data/training[1].csv")
train1 <- read.csv("../Split_Data/training[1].csv")
#setwd("C:/Users/User/Dropbox/SoybeanProject4741/Clara_Exp")
setwd("C:/Users/User/Dropbox/SoybeanProject4741/Clara_Exp")
train1 <- read.csv("../Split_Data/training[1].csv")
train1$YIELD_GRP <- as.factor(train1$YIELD_GRP)
train1$RM_GRP <- as.factor(train1$RM_GRP)
