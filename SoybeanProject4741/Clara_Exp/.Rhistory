test2 <-read.csv("../Split_Data2/test_2011.csv")
new <- cbind (test2, pred)
write.csv(new, file = "naivebayes2.csv")
confusion2 <- confusionMatrix(pred, reference = test2$GRAD, positive='yes')
nb_model <- naiveBayes(train3$GRAD~., data = train3)
pred <- predict(nb_model, test3[,1:length(myvars)-1])
test3 <-read.csv("../Split_Data2/test_2012.csv")
new <- cbind (test3, pred)
write.csv(new, file = "naivebayes3.csv")
confusion3 <- confusionMatrix(pred, reference = test3$GRAD, positive='yes')
nb_model <- naiveBayes(train4$GRAD~., data = train4)
pred <- predict(nb_model, test4[,1:length(myvars)-1])
test4 <-read.csv("../Split_Data2/test_2013.csv")
new <- cbind (test4, pred)
write.csv(new, file = "naivebayes4.csv")
confusion4 <- confusionMatrix(pred, reference = test4$GRAD, positive='yes')
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, test5[,1:length(myvars)-1])
test5 <-read.csv("../Split_Data2/test_2014.csv")
new <- cbind (test5, pred)
write.csv(new, file = "naivebayes5.csv")
confusion5 <-confusionMatrix(pred, reference = test5$GRAD, positive='yes')
confusion1$table
confusion2$table
confusion3$table
confusion4$table
confusion5$table
confusion1$overall['Accuracy']
confusion2$overall['Accuracy']
confusion3$overall['Accuracy']
confusion4$overall['Accuracy']
confusion5$overall['Accuracy']
# Prediction set#
test6 <-read.csv("../Split_Data2/prediction_set.csv")
test6 <- test6[myvars]
test6$GRAD <- as.factor(test6$GRAD)
str(test6)
str(test5)
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, test6[,length(myvars)-1])
new <- cbind (test6, pred)
write.csv(new, file = "naivebayes6.csv")
#Training error#
nb_model <- naiveBayes(train1$GRAD~., data = train1)
pred <- predict(nb_model, train1[,1:length(myvars)-1])
confusiontrain1 <- confusionMatrix(pred, reference = train1$GRAD, positive='yes')
nb_model <- naiveBayes(train2$GRAD~., data = train2)
pred <- predict(nb_model, train2[,1:length(myvars)-1])
confusiontrain2 <- confusionMatrix(pred, reference = train2$GRAD, positive='yes')
nb_model <- naiveBayes(train3$GRAD~., data = train3)
pred <- predict(nb_model, train3[,1:length(myvars)-1])
confusiontrain3 <- confusionMatrix(pred, reference = train3$GRAD, positive='yes')
nb_model <- naiveBayes(train4$GRAD~., data = train4)
pred <- predict(nb_model, train4[,1:length(myvars)-1])
confusiontrain4 <- confusionMatrix(pred, reference = train4$GRAD, positive='yes')
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, train5[,1:length(myvars)-1])
setwd("C:/Users/User/Dropbox/SoybeanProject4741/Clara_Exp")
myvars <- c("CHECK", "RM", "YIELD", "FAM_SEGMENT1", "FAM_SEGMENT2", "FAM_SEGMENT3", "FAM_SEGMENT4", "FAM_SEGMENT5", "GRAD")
myvars
train1 <- read.csv("../Split_Data2/training[1].csv")
train1 <- train1[myvars]
train1$GRAD <- as.factor(train1$GRAD)
#train1$CLASS_OF <- as.factor(train1$CLASS_OF)
train2 <- read.csv("../Split_Data2/training[2].csv")
train2 <- train2[myvars]
train2$GRAD <- as.factor(train2$GRAD)
#train2$CLASS_OF <- as.factor(train2$CLASS_OF)
train3 <- read.csv("../Split_Data2/training[3].csv")
train3 <- train3[myvars]
train3$GRAD <- as.factor(train3$GRAD)
#train3$CLASS_OF <- as.factor(train3$CLASS_OF)
train4 <- read.csv("../Split_Data2/training[4].csv")
train4 <- train4[myvars]
train4$GRAD <- as.factor(train4$GRAD)
#train4$CLASS_OF <- as.factor(train4$CLASS_OF)
train5 <- read.csv("../Split_Data2/training[5].csv")
train5 <- train5[myvars]
train5$GRAD <- as.factor(train5$GRAD)
#train5$CLASS_OF <- as.factor(train5$CLASS_OF)
# test sets #
test1 <-read.csv("../Split_Data2/test_2010.csv")
test1 <- test1[myvars]
test1$GRAD <- as.factor(test1$GRAD)
#test1$CLASS_OF <- as.factor(test1$CLASS_OF)
test2 <-read.csv("../Split_Data2/test_2011.csv")
test2 <- test2[myvars]
test2$GRAD <- as.factor(test2$GRAD)
#test2$CLASS_OF <- as.factor(test2$CLASS_OF)
test3 <-read.csv("../Split_Data2/test_2012.csv")
test3 <- test3[myvars]
test3$GRAD <- as.factor(test3$GRAD)
#test3$CLASS_OF <- as.factor(test3$CLASS_OF)
test4 <-read.csv("../Split_Data2/test_2013.csv")
test4 <- test4[myvars]
test4$GRAD <- as.factor(test4$GRAD)
#test4$CLASS_OF <- as.factor(test4$CLASS_OF)
test5 <-read.csv("../Split_Data2/test_2014.csv")
test5 <- test5[myvars]
test5$GRAD <- as.factor(test5$GRAD)
#test5$CLASS_OF <- as.factor(test5$CLASS_OF)
#############
library(lattice)
train5 <- read.csv("../Split_Data2/training[5].csv")
test5 <-read.csv("../Split_Data2/test_2014.csv")
table1 <- table(train5$GRAD, train5$YEAR)
table2 <- table(test5$GRAD, test5$YEAR)
table3 <- cbind(table1,table2)
table3
barplot(table3, main="Grad vs Year",
xlab="Grad", col=c("darkblue","red", "green"),
legend = rownames(table3), beside=TRUE)
table4 <- rbind(train5,test5)
table5 <- table(table4$GRAD, table4$CLASS)
barplot(table5, main="Grad vs Class",
xlab="Grad", col=c("darkblue","red", "green"),
legend = rownames(table5), beside=TRUE)
table5
#############
# Testing error
nb_model <- naiveBayes(train1$GRAD~., data = train1)
pred <- predict(nb_model, test1[,1:length(myvars)-1])
test1 <-read.csv("../Split_Data2/test_2010.csv")
new <- cbind (test1, pred)
write.csv(new, file = "naivebayes1.csv")
confusion1 <- confusionMatrix(pred, reference = test1$GRAD, positive='yes')
nb_model <- naiveBayes(train2$GRAD~., data = train2)
pred <- predict(nb_model, test2[,1:length(myvars)-1])
test2 <-read.csv("../Split_Data2/test_2011.csv")
new <- cbind (test2, pred)
write.csv(new, file = "naivebayes2.csv")
confusion2 <- confusionMatrix(pred, reference = test2$GRAD, positive='yes')
nb_model <- naiveBayes(train3$GRAD~., data = train3)
pred <- predict(nb_model, test3[,1:length(myvars)-1])
test3 <-read.csv("../Split_Data2/test_2012.csv")
new <- cbind (test3, pred)
write.csv(new, file = "naivebayes3.csv")
confusion3 <- confusionMatrix(pred, reference = test3$GRAD, positive='yes')
nb_model <- naiveBayes(train4$GRAD~., data = train4)
pred <- predict(nb_model, test4[,1:length(myvars)-1])
test4 <-read.csv("../Split_Data2/test_2013.csv")
new <- cbind (test4, pred)
write.csv(new, file = "naivebayes4.csv")
confusion4 <- confusionMatrix(pred, reference = test4$GRAD, positive='yes')
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, test5[,1:length(myvars)-1])
test5 <-read.csv("../Split_Data2/test_2014.csv")
new <- cbind (test5, pred)
write.csv(new, file = "naivebayes5.csv")
confusion5 <-confusionMatrix(pred, reference = test5$GRAD, positive='yes')
confusion1$table
confusion2$table
confusion3$table
confusion4$table
confusion5$table
confusion1$overall['Accuracy']
confusion2$overall['Accuracy']
confusion3$overall['Accuracy']
confusion4$overall['Accuracy']
confusion5$overall['Accuracy']
# Prediction set#
test6 <-read.csv("../Split_Data2/prediction_set.csv")
test6 <- test6[myvars]
test6$GRAD <- as.factor(test6$GRAD)
str(test6)
str(test5)
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, test6[,length(myvars)-1])
new <- cbind (test6, pred)
write.csv(new, file = "naivebayes6.csv")
#Training error#
nb_model <- naiveBayes(train1$GRAD~., data = train1)
pred <- predict(nb_model, train1[,1:length(myvars)-1])
confusiontrain1 <- confusionMatrix(pred, reference = train1$GRAD, positive='yes')
nb_model <- naiveBayes(train2$GRAD~., data = train2)
pred <- predict(nb_model, train2[,1:length(myvars)-1])
confusiontrain2 <- confusionMatrix(pred, reference = train2$GRAD, positive='yes')
nb_model <- naiveBayes(train3$GRAD~., data = train3)
pred <- predict(nb_model, train3[,1:length(myvars)-1])
confusiontrain3 <- confusionMatrix(pred, reference = train3$GRAD, positive='yes')
nb_model <- naiveBayes(train4$GRAD~., data = train4)
pred <- predict(nb_model, train4[,1:length(myvars)-1])
confusiontrain4 <- confusionMatrix(pred, reference = train4$GRAD, positive='yes')
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, train5[,1:length(myvars)-1])
confusiontrain5 <-confusionMatrix(pred, reference = train5$GRAD, positive='yes')
confusiontrain1$table
confusiontrain2$table
confusiontrain3$table
confusiontrain4$table
confusiontrain5$table
confusiontrain1$overall['Accuracy']
confusiontrain2$overall['Accuracy']
confusiontrain3$overall['Accuracy']
confusiontrain4$overall['Accuracy']
confusiontrain5$overall['Accuracy']
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, train5[,1:length(myvars)-1])
confusiontrain5 <-confusionMatrix(pred, reference = train5$GRAD, positive='yes')
test6 <-read.csv("../Split_Data2/prediction_set.csv")
test6 <- test6[myvars]
test6$GRAD <- as.factor(test6$GRAD)
str(test6)
str(test5)
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, test6[,length(myvars)-1])
new <- cbind (test6, pred)
write.csv(new, file = "naivebayes6.csv")
test6 <-read.csv("../Split_Data2/prediction_set.csv")
test6 <- test6[myvars]
test6$GRAD <- as.factor(test6$GRAD)
str(test6)
str(test5)
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, test6[,length(myvars)-1])
new <- cbind (test6, pred)
write.csv(new, file = "naivebayes6.csv")
#Training error#
nb_model <- naiveBayes(train1$GRAD~., data = train1)
pred <- predict(nb_model, train1[,1:length(myvars)-1])
confusiontrain1 <- confusionMatrix(pred, reference = train1$GRAD, positive='yes')
nb_model <- naiveBayes(train2$GRAD~., data = train2)
pred <- predict(nb_model, train2[,1:length(myvars)-1])
confusiontrain2 <- confusionMatrix(pred, reference = train2$GRAD, positive='yes')
nb_model <- naiveBayes(train3$GRAD~., data = train3)
pred <- predict(nb_model, train3[,1:length(myvars)-1])
confusiontrain3 <- confusionMatrix(pred, reference = train3$GRAD, positive='yes')
nb_model <- naiveBayes(train4$GRAD~., data = train4)
pred <- predict(nb_model, train4[,1:length(myvars)-1])
confusiontrain4 <- confusionMatrix(pred, reference = train4$GRAD, positive='yes')
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, train5[,1:length(myvars)-1])
confusiontrain5 <-confusionMatrix(pred, reference = train5$GRAD, positive='yes')
confusiontrain1$table
confusiontrain2$table
confusiontrain3$table
confusiontrain4$table
confusiontrain5$table
confusiontrain1$overall['Accuracy']
confusiontrain2$overall['Accuracy']
confusiontrain3$overall['Accuracy']
confusiontrain4$overall['Accuracy']
confusiontrain5$overall['Accuracy']
table <- xtabs(~ traindata$CHECK+ traindata$GRAD, traindata) # Frequency table
table
IntersectVarities_Year <- read.csv("C:/Users/User/Dropbox/SoybeanProject4741/Clara_Exp/IntersectVarities_Year.csv", header=FALSE)
View(IntersectVarities_Year)
IntersectFamilies_Year <- read.csv("C:/Users/User/Dropbox/SoybeanProject4741/Clara_Exp/IntersectFamilies_Year.csv")
View(IntersectFamilies_Year)
IntersectVarities_Year <- read.csv("C:/Users/User/Dropbox/SoybeanProject4741/Clara_Exp/IntersectVarities_Year.csv")
View(IntersectVarities_Year)
data<- IntersectVarieties_Year
data
str(data)
count = 1
check = data.frame(matrix(NA, nrow=15485, ncol=20))
data<- IntersectVarieties_Year
IntersectVarities_Year <- read.csv("C:/Users/User/Dropbox/SoybeanProject4741/Clara_Exp/IntersectVarities_Year.csv")
View(IntersectVarities_Year)
data<- IntersectVarieties_Year
data<-IntersectVarities_Year
data
str(data)
data<- IntersectVarieties
data
str(data)
data<-IntersectVarities_Year
data
str(data)
check = data.frame(matrix(NA, nrow=6487, ncol=20))
str(check)
for (i in 1:6) {
for (j in 1:6) {
if (i!=j)
{
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
str(check)
write.csv(check, file = "CheckVarieties_Year.csv")
data2 <- IntersectFamilies_Year
data2
str(data2)
check2 = data.frame(matrix(NA, nrow=872, ncol=20))
count2 = 1
str(check2)
for (i in 1:6) {
for (j in 1:6) {
if (i!=j)
{
temp <- data.frame(intersect(data2[,i], data2[,j]))
temp2<-intersect(data2[,i], data2[,j])
x <- nrow(temp)
for (k in 1:x) {
check2[k, count2] = temp2[k]
}
count2 = count2 + 1
}
}
}
count2
check2
write.csv(check2, file = "CheckFamilies_Year.csv")
data<-IntersectVarities_Year
data
str(data)
count = 1
check = data.frame(matrix(NA, nrow=6487, ncol=20))
str(check)
for (i in 1:6) {
for (j in 1:6) {
if (i!=j)
{
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
count
data<-IntersectVarities_Year
data
str(data)
count = 1
check = data.frame(matrix(NA, nrow=6487, ncol=20))
check = data.frame(matrix(NA, nrow=6487, ncol=30))
str(check)
for (i in 1:6) {
for (j in 1:6) {
if (i!=j)
{
check[,count] <- intersect(data[,i], data[,j])
count = count + 1
}
}
}
data2 <- IntersectFamilies_Year
data2
str(data2)
count2 = 1
check2 = data.frame(matrix(NA, nrow=872, ncol=30))
str(check2)
for (i in 1:6) {
for (j in 1:6) {
if (i!=j)
{
temp <- data.frame(intersect(data2[,i], data2[,j]))
temp2<-intersect(data2[,i], data2[,j])
x <- nrow(temp)
for (k in 1:x) {
check2[k, count2] = temp2[k]
}
count2 = count2 + 1
}
}
}
count2
check2
write.csv(check2, file = "CheckFamilies_Year.csv")
setwd("C:/Users/User/Dropbox/SoybeanProject4741/Clara_Exp")
myvars <- c("CHECK", "RM", "YIELD", "FAM_SEGMENT1", "FAM_SEGMENT2", "FAM_SEGMENT3", "FAM_SEGMENT4", "FAM_SEGMENT5", "GRAD")
myvars
train1 <- read.csv("../Split_Data3/training[1].csv")
train1 <- train1[myvars]
train1$GRAD <- as.factor(train1$GRAD)
#train1$CLASS_OF <- as.factor(train1$CLASS_OF)
train2 <- read.csv("../Split_Data3/training[2].csv")
train2 <- train2[myvars]
train2$GRAD <- as.factor(train2$GRAD)
#train2$CLASS_OF <- as.factor(train2$CLASS_OF)
train3 <- read.csv("../Split_Data3/training[3].csv")
train3 <- train3[myvars]
train3$GRAD <- as.factor(train3$GRAD)
#train3$CLASS_OF <- as.factor(train3$CLASS_OF)
train4 <- read.csv("../Split_Data3/training[4].csv")
train4 <- train4[myvars]
train4$GRAD <- as.factor(train4$GRAD)
#train4$CLASS_OF <- as.factor(train4$CLASS_OF)
train5 <- read.csv("../Split_Data3/training[5].csv")
train5 <- train5[myvars]
train5$GRAD <- as.factor(train5$GRAD)
#train5$CLASS_OF <- as.factor(train5$CLASS_OF)
# test sets #
test1 <-read.csv("../Split_Data3/test_2010.csv")
test1 <- test1[myvars]
test1$GRAD <- as.factor(test1$GRAD)
#test1$CLASS_OF <- as.factor(test1$CLASS_OF)
test2 <-read.csv("../Split_Data3/test_2011.csv")
test2 <- test2[myvars]
test2$GRAD <- as.factor(test2$GRAD)
#test2$CLASS_OF <- as.factor(test2$CLASS_OF)
test3 <-read.csv("../Split_Data3/test_2012.csv")
test3 <- test3[myvars]
test3$GRAD <- as.factor(test3$GRAD)
#test3$CLASS_OF <- as.factor(test3$CLASS_OF)
test4 <-read.csv("../Split_Data3/test_2013.csv")
test4 <- test4[myvars]
test4$GRAD <- as.factor(test4$GRAD)
#test4$CLASS_OF <- as.factor(test4$CLASS_OF)
test5 <-read.csv("../Split_Data3/test_2014.csv")
test5 <- test5[myvars]
test5$GRAD <- as.factor(test5$GRAD)
#test5$CLASS_OF <- as.factor(test5$CLASS_OF)
#############
library(lattice)
train5 <- read.csv("../Split_Data3/training[5].csv")
test5 <-read.csv("../Split_Data3/test_2014.csv")
table1 <- table(train5$GRAD, train5$YEAR)
table2 <- table(test5$GRAD, test5$YEAR)
table3 <- cbind(table1,table2)
table3
barplot(table3, main="Grad vs Year",
xlab="Grad", col=c("darkblue","red", "green"),
legend = rownames(table3), beside=TRUE)
table4 <- rbind(train5,test5)
table5 <- table(table4$GRAD, table4$CLASS)
barplot(table5, main="Grad vs Class",
xlab="Grad", col=c("darkblue","red", "green"),
legend = rownames(table5), beside=TRUE)
table5
#############
# Testing error
nb_model <- naiveBayes(train1$GRAD~., data = train1)
pred <- predict(nb_model, test1[,1:length(myvars)-1])
test1 <-read.csv("../Split_Data3/test_2010.csv")
new <- cbind (test1, pred)
write.csv(new, file = "naivebayes1.csv")
confusion1 <- confusionMatrix(pred, reference = test1$GRAD, positive='yes')
nb_model <- naiveBayes(train2$GRAD~., data = train2)
pred <- predict(nb_model, test2[,1:length(myvars)-1])
test2 <-read.csv("../Split_Data3/test_2011.csv")
new <- cbind (test2, pred)
write.csv(new, file = "naivebayes2.csv")
confusion2 <- confusionMatrix(pred, reference = test2$GRAD, positive='yes')
nb_model <- naiveBayes(train3$GRAD~., data = train3)
pred <- predict(nb_model, test3[,1:length(myvars)-1])
test3 <-read.csv("../Split_Data3/test_2012.csv")
new <- cbind (test3, pred)
write.csv(new, file = "naivebayes3.csv")
confusion3 <- confusionMatrix(pred, reference = test3$GRAD, positive='yes')
nb_model <- naiveBayes(train4$GRAD~., data = train4)
pred <- predict(nb_model, test4[,1:length(myvars)-1])
test4 <-read.csv("../Split_Data3/test_2013.csv")
new <- cbind (test4, pred)
write.csv(new, file = "naivebayes4.csv")
confusion4 <- confusionMatrix(pred, reference = test4$GRAD, positive='yes')
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, test5[,1:length(myvars)-1])
test5 <-read.csv("../Split_Data3/test_2014.csv")
new <- cbind (test5, pred)
write.csv(new, file = "naivebayes5.csv")
confusion5 <-confusionMatrix(pred, reference = test5$GRAD, positive='yes')
confusion1$table
confusion2$table
confusion3$table
confusion4$table
confusion5$table
confusion1$overall['Accuracy']
confusion2$overall['Accuracy']
confusion3$overall['Accuracy']
confusion4$overall['Accuracy']
confusion5$overall['Accuracy']
test6 <-read.csv("../Split_Data3/prediction_set.csv")
test6 <- test6[myvars]
test6$GRAD <- as.factor(test6$GRAD)
str(test6)
str(test5)
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, test6[,length(myvars)-1])
new <- cbind (test6, pred)
write.csv(new, file = "naivebayes6.csv")
test6 <-read.csv("../Split_Data3/prediction_set.csv")
test6 <- test6[myvars]
test6$GRAD <- as.factor(test6$GRAD)
str(test6)
str(test5)
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, test6[,length(myvars)-1])
new <- cbind (test6, pred)
write.csv(new, file = "naivebayes6.csv")
confusion1$table
confusion2$table
confusion3$table
confusion4$table
confusion5$table
#Training error#
nb_model <- naiveBayes(train1$GRAD~., data = train1)
pred <- predict(nb_model, train1[,1:length(myvars)-1])
confusiontrain1 <- confusionMatrix(pred, reference = train1$GRAD, positive='yes')
nb_model <- naiveBayes(train2$GRAD~., data = train2)
pred <- predict(nb_model, train2[,1:length(myvars)-1])
confusiontrain2 <- confusionMatrix(pred, reference = train2$GRAD, positive='yes')
nb_model <- naiveBayes(train3$GRAD~., data = train3)
pred <- predict(nb_model, train3[,1:length(myvars)-1])
confusiontrain3 <- confusionMatrix(pred, reference = train3$GRAD, positive='yes')
nb_model <- naiveBayes(train4$GRAD~., data = train4)
pred <- predict(nb_model, train4[,1:length(myvars)-1])
confusiontrain4 <- confusionMatrix(pred, reference = train4$GRAD, positive='yes')
nb_model <- naiveBayes(train5$GRAD~., data = train5)
pred <- predict(nb_model, train5[,1:length(myvars)-1])
confusiontrain5 <-confusionMatrix(pred, reference = train5$GRAD, positive='yes')
confusiontrain1$table
confusiontrain2$table
confusiontrain3$table
confusiontrain4$table
confusiontrain5$table
confusiontrain1$overall['Accuracy']
confusiontrain2$overall['Accuracy']
confusiontrain3$overall['Accuracy']
confusiontrain4$overall['Accuracy']
confusiontrain5$overall['Accuracy']
